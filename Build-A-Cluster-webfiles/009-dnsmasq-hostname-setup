class base_cluster {

#### START

  # order of operations to prevent "no dns" race condition
  Class['dnsmasq'] -> Class['resolv_conf'] -> Exec['set-hostname-to-dns']

  class { 'dnsmasq':
    interface         => 'lo',
    listen_address    => '127.0.0.1',
    domain            => 'cluster',
    port              => '53',
    expand_hosts      => false,
    enable_tftp       => false,
    domain_needed     => true,
    bogus_priv        => true,
    no_negcache       => true,
    no_hosts          => true,
    cache_size        => 5000,
  }

  $iparray_head = split($headnodeip, '[.]')
  $headnode_reverse = join([$iparray_head[3], ".", $iparray_head[2], ".", $iparray_head[1], ".", $iparray_head[0], ".in-addr.arpa."] ,'')

  $iparray_store = split($storagenodeip, '[.]')
  $storagenode_reverse = join([$iparray_store[3], ".", $iparray_store[2], ".", $iparray_store[1], ".", $iparray_store[0], ".in-addr.arpa."] ,'')

  $iparray_comone = split($computeoneip, '[.]')
  $computeone_reverse = join([$iparray_comone[3], ".", $iparray_comone[2], ".", $iparray_comone[1], ".", $iparray_comone[0], ".in-addr.arpa."] ,'')

  $iparray_comtwo = split($computetwoip, '[.]')
  $computetwo_reverse = join([$iparray_comtwo[3], ".", $iparray_comtwo[2], ".", $iparray_comtwo[1], ".", $iparray_comtwo[0], ".in-addr.arpa."] ,'')

  dnsmasq::dnsserver { 'dns':
    ip => '8.8.8.8',
  }

  dnsmasq::address { "head.cluster":
    ip  => $headnodeip,
  }

  dnsmasq::ptr { $headnode_reverse:
    value  => 'head.cluster',
  }

  dnsmasq::address { "storage.cluster":
    ip  => $storagenodeip,
  }

  dnsmasq::ptr { $storagenode_reverse:
    value  => 'storage.cluster',
  }

  dnsmasq::address { "compute1.cluster":
    ip  => $computeoneip,
  }

  dnsmasq::ptr { $computeone_reverse:
    value  => 'compute1.cluster',
  }

  dnsmasq::address { "compute2.cluster":
    ip  => $computetwoip,
  }

  dnsmasq::ptr { $computetwo_reverse:
    value  => 'compute2.cluster',
  }

  class { 'resolv_conf':
    nameservers => ['127.0.0.1'],
    searchpath  => ['cluster'],
  }

  # reset the hostname using our new dnsmasq names
  exec { "set-hostname-to-dns":
    # this sets the hostname to the dig name of the ip address on eth0 and without the period at the end
    command => 'hostname $(dig +short -x `hostname -I` | sed "s/\.\+$//")',
  }

#### END

}
